/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DestinationMinter,
  DestinationMinterInterface,
} from "../../contracts/DestinationMinter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "MintCallSuccessful",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052732a9c5afb0d0e4bab2bcdae109ec4b0c4be15a1656000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100f85760006040517fd7f733340000000000000000000000000000000000000000000000000000000081526004016100ef9190610173565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505061018e565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015d82610132565b9050919050565b61016d81610152565b82525050565b60006020820190506101886000830184610164565b92915050565b608051610b7a6101b060003960008181610184015261022b0152610b7a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb14610076578063b0f479a114610092575b600080fd5b610060600480360381019061005b91906103d6565b6100b0565b60405161006d919061041e565b60405180910390f35b610090600480360381019061008b919061045d565b610182565b005b61009a610227565b6040516100a791906104e7565b60405180910390f35b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061017b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021257336040517fd7f7333400000000000000000000000000000000000000000000000000000000815260040161020991906104e7565b60405180910390fd5b6102248161021f90610922565b61024f565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080826060015180602001905181019061026a9190610a0d565b91509150600082905060008173ffffffffffffffffffffffffffffffffffffffff168360405161029a9190610ab0565b6000604051808303816000865af19150503d80600081146102d7576040519150601f19603f3d011682016040523d82523d6000602084013e6102dc565b606091505b5050905080610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031790610b24565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff167f255a5918250f68983d149c74aa409e814b26d8d504820c148938833da6c79a1a60405160405180910390a25050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103b38161037e565b81146103be57600080fd5b50565b6000813590506103d0816103aa565b92915050565b6000602082840312156103ec576103eb610374565b5b60006103fa848285016103c1565b91505092915050565b60008115159050919050565b61041881610403565b82525050565b6000602082019050610433600083018461040f565b92915050565b600080fd5b600060a0828403121561045457610453610439565b5b81905092915050565b60006020828403121561047357610472610374565b5b600082013567ffffffffffffffff81111561049157610490610379565b5b61049d8482850161043e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d1826104a6565b9050919050565b6104e1816104c6565b82525050565b60006020820190506104fc60008301846104d8565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61055082610507565b810181811067ffffffffffffffff8211171561056f5761056e610518565b5b80604052505050565b600061058261036a565b905061058e8282610547565b919050565b600080fd5b6000819050919050565b6105ab81610598565b81146105b657600080fd5b50565b6000813590506105c8816105a2565b92915050565b600067ffffffffffffffff82169050919050565b6105eb816105ce565b81146105f657600080fd5b50565b600081359050610608816105e2565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561063357610632610518565b5b61063c82610507565b9050602081019050919050565b82818337600083830152505050565b600061066b61066684610618565b610578565b90508281526020810184848401111561068757610686610613565b5b610692848285610649565b509392505050565b600082601f8301126106af576106ae61060e565b5b81356106bf848260208601610658565b91505092915050565b600067ffffffffffffffff8211156106e3576106e2610518565b5b602082029050602081019050919050565b600080fd5b610702816104c6565b811461070d57600080fd5b50565b60008135905061071f816106f9565b92915050565b6000819050919050565b61073881610725565b811461074357600080fd5b50565b6000813590506107558161072f565b92915050565b60006040828403121561077157610770610502565b5b61077b6040610578565b9050600061078b84828501610710565b600083015250602061079f84828501610746565b60208301525092915050565b60006107be6107b9846106c8565b610578565b905080838252602082019050604084028301858111156107e1576107e06106f4565b5b835b8181101561080a57806107f6888261075b565b8452602084019350506040810190506107e3565b5050509392505050565b600082601f8301126108295761082861060e565b5b81356108398482602086016107ab565b91505092915050565b600060a0828403121561085857610857610502565b5b61086260a0610578565b90506000610872848285016105b9565b6000830152506020610886848285016105f9565b602083015250604082013567ffffffffffffffff8111156108aa576108a9610593565b5b6108b68482850161069a565b604083015250606082013567ffffffffffffffff8111156108da576108d9610593565b5b6108e68482850161069a565b606083015250608082013567ffffffffffffffff81111561090a57610909610593565b5b61091684828501610814565b60808301525092915050565b600061092e3683610842565b9050919050565b6000610940826104a6565b9050919050565b61095081610935565b811461095b57600080fd5b50565b60008151905061096d81610947565b92915050565b60005b83811015610991578082015181840152602081019050610976565b60008484015250505050565b60006109b06109ab84610618565b610578565b9050828152602081018484840111156109cc576109cb610613565b5b6109d7848285610973565b509392505050565b600082601f8301126109f4576109f361060e565b5b8151610a0484826020860161099d565b91505092915050565b60008060408385031215610a2457610a23610374565b5b6000610a328582860161095e565b925050602083015167ffffffffffffffff811115610a5357610a52610379565b5b610a5f858286016109df565b9150509250929050565b600081519050919050565b600081905092915050565b6000610a8a82610a69565b610a948185610a74565b9350610aa4818560208601610973565b80840191505092915050565b6000610abc8284610a7f565b915081905092915050565b600082825260208201905092915050565b7f4e4654206d696e74696e67206661696c65640000000000000000000000000000600082015250565b6000610b0e601283610ac7565b9150610b1982610ad8565b602082019050919050565b60006020820190508181036000830152610b3d81610b01565b905091905056fea2646970667358221220ded12476c1835c2abce09bf03df67e6d877fde9d7ea6d2a1e04eadd7e9fcd68464736f6c63430008130033";

type DestinationMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationMinter__factory extends ContractFactory {
  constructor(...args: DestinationMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DestinationMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DestinationMinter__factory {
    return super.connect(runner) as DestinationMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationMinterInterface {
    return new Interface(_abi) as DestinationMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DestinationMinter {
    return new Contract(address, _abi, runner) as unknown as DestinationMinter;
  }
}
